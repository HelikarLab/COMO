Call clustering after merging
Want to all cluster replicates at replicate level, batch level, and source level
	S1R* (replicate)
	S*R* (sample/batch)
	transcriptomics (source)

Follow combine_distributions.R script as template
	Memory usage may be an issue
		Create a dataframe for all samples?

1. Read clustering R script
2. Read merging R script


--------------
Steps
--------------
1. Add flag to merge_xomics.py that turns on clustering
	- If this flag is ON, require the option to use binarized data or z scores, and clustering parameter arguments
2. Modify (or rewrite) combine_distributions.R (which is called from merge_xomics.py) that:
	- reads zFPKMs/TPM/CPM for each replicate
		+ binarizes them if given zFPKM argument in #1
		+ Look at the kOverA function in RNAseq.R to see how to binarize zFPKM data

3. Cluster all replicates for all batches/studies across all cell types (contexts) within a single data source
4. Cluster all replicates for all batches/studies across all data sources within one cell type
5. Cluster all batches/studies across all cell types (contexts) within one data source at a time
6. Cluster all batches/studies across all data sources within one cell type


[X] So add a flag to merge that turns on clustering.
[ ] This flag also demands args that tell it whether to use binarzied data or z scores, and clustering parameter args
[ ] Also take args for which data sources to check.
[ ] If the args are using binarized data, it should take argument specifying z-transformed, tpm-quantile, or cpm
	[ ] If using proteomics at all, tpm-quantile and cpm should return an error saying that proteomics and transcriptomics can only be compared with z-transform

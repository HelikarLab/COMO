library(affy)
library(WGCNA)
allowWGCNAThreads()
install.packages("igraph")
install.packages("httr")
install.packages("RJSONIO")
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("xps")
library('xps')
library(xps)
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("xps")
library(xps)
library("xps", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("xps")
library(xps)
source("http://bioconductor.org/biocLite.R")
biocLite("xps", type="source")
library("xps")
detach("package:xps", unload=TRUE)
library("xps", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
setwd("~/Desktop/GSE2770_RAW")
library(affy)
mydata <- ReadAffy()
mydata <- ReadAffy()
mydata <- ReadAffy()
eset <- rma(mydata)
setwd("~/Desktop/untitled folder")
mydata <- ReadAffy()
eset <- rma(mydata)
write.exprs(eset, file="mydata.txt")
setwd("~/Desktop/untitled folder 2")
mydata <- ReadAffy()
eset <- rma(mydata)
write.exprs(eset, file="mydata.txt")
x <- data.frame(exprs(eset))
x_log2 = log2(x)
View(x_log2)
write.table(x_log2, file = "log2.txt", sep = "\t")
x_scale = scale(x_log2)
write.table(x_scale, file = "scale.txt", sep = "\t")
x_scale_no2 = scale(x)
write.table(x_scale_no2, file = "scale_no2.txt", sep = "\t")
x_log10 = log(x)
write.table(x_log10, file = "log10.txt", sep = "\t")
x_10scale = scale(x_log10. file = "scale_log10.txt", sep = "\t")
x_10scale = scale(x_log10, file = "scale_log10.txt", sep = "\t")
x_10scale = scale(x_log10)
write.table(x_10scale, file = "10scale.txt", sep = "\t")
x_scale_2 = log2(x_scale_no2)
write.table(x_scale_2, file = "x_scale_2.txt", sep = "\t")
gpl96hgnc = read.delim(file = "gpl96hgnc.txt", sep = "\t")
View(gpl96hgnc)
View(gpl96hgnc)
my_data_new = read.delim(file = "mydata.txt", sep = "\t")
View(my_data_new)
MERGE = merge(gpl96hgnc, my_data_new, by = "PROBEID", all = TRUE)
write.table(MERGE, file = "MERGE.txt", sep = "\t")
NEW_MERGE = read.delim(file = "MERGE.txt", sep = "\t")
View(NEW_MERGE)
NEW_MERGE = read.delim(file = "MERGE.txt", sep = "\t")
View(x)
NEW_MERGE = read.delim(file = "MERGE.txt", sep = "\t")
View(NEW_MERGE)
NEW_MERGE[,1]
rownames(NEW_MERGE) = NEW_MERGE[,1]
NEW_MERGE = read.delim(file = "MERGE.txt", sep = "\t")
NEW_MERGE = NEW_MERGE[!duplicated(NEW_MERGE[,1]),]
rownames(NEW_MERGE) = NEW_MERGE[,1]
NEW_MERGE = NEW_MERGE[,-1]
View(NEW_MERGE)
NEW_MERGE_log2_scale = scale(log2(NEW_MERGE))
write.table(NEW_MERGE, file = "NEW_MERGE.txt", sep = "\t")
NEW_MERGE_2 = read.delim(file = "NEW_MERGE.txt", sep = "\t")
View(NEW_MERGE_2)
metGenes = read.delim(file = "gpl96_metgenes.txt", sep = "\t")
View(metGenes)
gpl96_metGenes = merge(metGenes, NEW_MERGE_2, by = "HGNC")
View(gpl96_metGenes)
rownames(gpl96_metGenes) = gpl96_metGenes[,1]
View(gpl96_metGenes)
gpl96_metGenes = gpl96_metGenes[,-1]
gpl96_metGenes_log2scale = scale(log2(gpl96_metGenes))
write.table(gpl96_metGenes_log2scale, file = "gpl96_metGenes_log2scale.txt", sep = "\t")
savehistory("~/Desktop/untitled folder 2/redo_affy.Rhistory")
eset = rma(mydata)
View(mydata)

library(affy)
library(WGCNA)
allowWGCNAThreads()
install.packages("igraph")
install.packages("httr")
install.packages("RJSONIO")
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("xps")
library('xps')
library(xps)
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("xps")
library(xps)
library("xps", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("xps")
library(xps)
source("http://bioconductor.org/biocLite.R")
biocLite("xps", type="source")
library("xps")
detach("package:xps", unload=TRUE)
library("xps", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
setwd("~/Desktop")
hgnc96 = read.delim(file = "gpl96.csv", sep = ",")
setwd("~/Desktop/GSE2770_RAW")
setwd("~/Desktop/GSE2770_RAW/gpl96")
#setwd("~/OneDrive - University of Nebraska-Lincoln/BIOC439_TermProject/New/Control/gpl570")
library(affy)
mydata = ReadAffy()
eset = rma(mydata)
x = data.frame(exprs(eset))
x[,35] = rownames(x)
string = colnames(x)
string[35] = "ID"
colnames(x) = string
MERGE = merge(x, hgnc96, by = "ID", all = TRUE)
write.table(MERGE, file = "MERGE.csv", sep = ",")
# organize columns and sort highest to lowest average expression
NEW = read.delim(file = "MERGE.csv", sep = ",")
NEW = NEW[!duplicated(NEW[,1]),]
NEW = NEW[,-36]
rownames(NEW) = NEW[,1]
NEW = NEW[,-1]
write.table(NEW, file = "data.csv", sep = ",")
View(NEW)
# calculate z-score
NEW_z = scale(log2(NEW))
write.table(NEW_z, file = "data_z.csv", sep = ",")
# boxplot
boxplot_labels = colnames(NEW_z)
boxplot = boxplot.matrix(NEW_z, use.cols = TRUE, outline = TRUE, names = boxplot_labels, main = "GSE2770 Data", xlab = "Samples", ylab = "Normalized Expression Value", col=(c("purple")))
setwd("~/Desktop")
hgnc96 = read.delim(file = "gpl96.csv", sep = ",")
setwd("~/Desktop/GSE2770_RAW/gpl97")
#setwd("~/OneDrive - University of Nebraska-Lincoln/BIOC439_TermProject/New/Control/gpl570")
library(affy)
mydata = ReadAffy()
eset = rma(mydata)
x = data.frame(exprs(eset))
x[,35] = rownames(x)
string = colnames(x)
string[35] = "ID"
colnames(x) = string
MERGE = merge(x, hgnc96, by = "ID", all = TRUE)
write.table(MERGE, file = "MERGE.csv", sep = ",")
setwd("~/Desktop")
hgnc97 = read.delim(file = "gpl97.csv", sep = ",")
setwd("~/Desktop/GSE2770_RAW/gpl97")
#setwd("~/OneDrive - University of Nebraska-Lincoln/BIOC439_TermProject/New/Control/gpl570")
library(affy)
mydata = ReadAffy()
eset = rma(mydata)
x = data.frame(exprs(eset))
x[,35] = rownames(x)
string = colnames(x)
string[35] = "ID"
colnames(x) = string
MERGE = merge(x, hgnc96, by = "ID", all = TRUE)
write.table(MERGE, file = "MERGE.csv", sep = ",")
MERGE = merge(x, hgnc97, by = "ID", all = TRUE)
write.table(MERGE, file = "MERGE.csv", sep = ",")
# organize columns and sort highest to lowest average expression
NEW = read.delim(file = "MERGE.csv", sep = ",")
NEW = NEW[!duplicated(NEW[,1]),]
NEW = NEW[,-36]
rownames(NEW) = NEW[,1]
NEW = NEW[,-1]
write.table(NEW, file = "data.csv", sep = ",")
# calculate z-score
NEW_z = scale(log2(NEW))
write.table(NEW_z, file = "data_z.csv", sep = ",")
# boxplot
boxplot_labels = colnames(NEW_z)
boxplot = boxplot.matrix(NEW_z, use.cols = TRUE, outline = TRUE, names = boxplot_labels, main = "GSE2770 Data", xlab = "Samples", ylab = "Normalized Expression Value", col=(c("purple")))
setwd("~/Desktop")
hgnc8300 = read.delim(file = "gpl8300.csv", sep = ",")
setwd("~/Desktop/GSE2770_RAW/gpl8300")
#setwd("~/OneDrive - University of Nebraska-Lincoln/BIOC439_TermProject/New/Control/gpl570")
library(affy)
mydata = ReadAffy()
eset = rma(mydata)
x = data.frame(exprs(eset))
x[,34] = rownames(x)
string = colnames(x)
string[34] = "ID"
colnames(x) = string
MERGE = merge(x, hgnc8300, by = "ID", all = TRUE)
write.table(MERGE, file = "MERGE.csv", sep = ",")
# organize columns and sort highest to lowest average expression
NEW = read.delim(file = "MERGE.csv", sep = ",")
NEW = NEW[!duplicated(NEW[,1]),]
NEW = NEW[,-35]
rownames(NEW) = NEW[,1]
NEW = NEW[,-1]
write.table(NEW, file = "data.csv", sep = ",")
# calculate z-score
NEW_z = scale(log2(NEW))
write.table(NEW_z, file = "data_z.csv", sep = ",")
# boxplot
boxplot_labels = colnames(NEW_z)
boxplot = boxplot.matrix(NEW_z, use.cols = TRUE, outline = TRUE, names = boxplot_labels, main = "GSE2770 Data", xlab = "Samples", ylab = "Normalized Expression Value", col=(c("purple")))

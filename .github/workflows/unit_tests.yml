name: Unit Tests
on:
  pull_request:
    types: [ opened, reopened, synchronize ]
  workflow_dispatch:


jobs:
  unit-tests:
    runs-on: ubuntu-latest

    # Using a matrix lets us define additional versions of Python to test against
    strategy:
      matrix:
        python-version: [ "3.10" ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Only execute this workflow if python files have changed
      - name: Check for python changes
        id: python-changes
        run: |
          python_changes=$(git diff --name-only ${{ github.event.before}} ${{ github.sha }} | grep '\.py$' | wc -l)
          if [ "$python_changes" -eq "0" ]; then
            echo "python-changed=false" >> $GITHUB_ENV
          else
            echo "python-changed=true" >> $GITHUB_ENV
          fi

      - name: Set Status Check Outcome
        if: env.python-changed == 'true'
        run: "echo 'Status check outcome: failure'"
        continue-on-error: true

      - name: Mark Status Check as Success
        if: env.python-changed == 'true'
        run: "echo 'Status check outcome: success'"

      - name: Install Conda environment
        uses: mamba-org/provision-with-micromamba@main
        if: env.python-changed == 'true'
        with:
          environment-file: main/src/tests/environment.yaml
          environment-name: como_tests
          extra-specs: |
            python=${{ matrix.python-version }}

      - name: Lint with flake8
        if: env.python-changed == 'true'
        run: |
          # Initialize micromamba and activate como_tests environment
          eval "$(micromamba shell hook --shell=bash)" && micromamba activate como_tests
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        if: env.python-changed == 'true'
        run: |
          # Initialize micromamba and activate como_tests environment
          eval "$(micromamba shell hook --shell=bash)" && micromamba activate como_tests
          python -m pytest
